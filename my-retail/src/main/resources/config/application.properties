## logging
logging.level.root=${LOG_LEVEL:INFO}
logging.level.org.hibernate=ERROR
logging.level.org.springframework.web=${LOG_LEVEL:WARN}
logging.file=data/myretail.log
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%12.12t]){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%logger{39}){cyan}.%clr(%M{15}\\(%line\\)){cyan} :: %msg%n
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%12.12t]){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%logger{39}){cyan}.%clr(%M{15}\\(%line\\)){cyan} :: %msg%n


###*************************************************************************************************************************

## Server Configs
server.port=${SERVER_PORT:8080}
spring.profiles.active=${SPRING_PROFILE_ACTIVE:local}
# Maximum number of connections that the server will accept and process at any given time.
server.tomcat.max-connections=500000
# Maximum amount of worker threads.
server.tomcat.max-threads=500000
# Maximum size in bytes of the HTTP message header.
server.max-http-header-size=40960


## External API URL
external.host=https://redsky.target.com
external.endpoint = v2/pdp/tcin
external.params={Item_Id}?excludes=taxonomy,price,promotion,bulk_ship,rating_and_review_reviews,rating_and_review_statistics,question_answer_statistics

external.api.url=${EXTERNAL_API:${external.host}/${external.endpoint}/${external.params}}
external.name.depth=product,item,product_description,title
external.name.key=name
## Spring boot Actuator config
management.server.port=9001
management.server.ssl.enabled=false
management.endpoint.shutdown.enabled=true
management.endpoints.enabled-by-default=true
management.endpoint.info.enabled=true
management.endpoints.web.exposure.include=*
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyDialect
spring.datasource.url=jdbc:derby:RetailDb;create=true


#Banner properties
spring.banner.location=classpath:banner.txt

#spring.banner.image.location=classpath:banner.png
#spring.banner.image.width=  //TODO
#spring.banner.image.height= //TODO
#spring.banner.image.margin= //TODO
#spring.banner.image.invert= //TODO
